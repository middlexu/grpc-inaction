# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import Hello_pb2 as Hello__pb2


class HelloServiceStub(object):
  """这是protobuf中定义service的方法，跟thrift差不多，但是关键字不一样
  service中有四种rpc方法类型
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.simpleHello = channel.unary_unary(
        '/com.protobuf.proto.HelloService/simpleHello',
        request_serializer=Hello__pb2.Person.SerializeToString,
        response_deserializer=Hello__pb2.Result.FromString,
        )
    self.serverStreamHello = channel.unary_stream(
        '/com.protobuf.proto.HelloService/serverStreamHello',
        request_serializer=Hello__pb2.Person.SerializeToString,
        response_deserializer=Hello__pb2.Result.FromString,
        )
    self.clientStreamHello = channel.stream_unary(
        '/com.protobuf.proto.HelloService/clientStreamHello',
        request_serializer=Hello__pb2.Person.SerializeToString,
        response_deserializer=Hello__pb2.Result.FromString,
        )
    self.biStreamHello = channel.stream_stream(
        '/com.protobuf.proto.HelloService/biStreamHello',
        request_serializer=Hello__pb2.Person.SerializeToString,
        response_deserializer=Hello__pb2.Result.FromString,
        )


class HelloServiceServicer(object):
  """这是protobuf中定义service的方法，跟thrift差不多，但是关键字不一样
  service中有四种rpc方法类型
  """

  def simpleHello(self, request, context):
    """1.发送一个request请求，返回一个result响应
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def serverStreamHello(self, request, context):
    """2.发送一个request请求，返回一个stream响应
    虽然我们这里只是想传入一个int32（age），但是protobuf传入的参数必须是message类型，和thrift不同
    thrift是可以直接传入int，详细可看thrift
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def clientStreamHello(self, request_iterator, context):
    """3.发送一个stream请求，返回一个result响应
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def biStreamHello(self, request_iterator, context):
    """4.发送stream请求，返回一个stream响应
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_HelloServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'simpleHello': grpc.unary_unary_rpc_method_handler(
          servicer.simpleHello,
          request_deserializer=Hello__pb2.Person.FromString,
          response_serializer=Hello__pb2.Result.SerializeToString,
      ),
      'serverStreamHello': grpc.unary_stream_rpc_method_handler(
          servicer.serverStreamHello,
          request_deserializer=Hello__pb2.Person.FromString,
          response_serializer=Hello__pb2.Result.SerializeToString,
      ),
      'clientStreamHello': grpc.stream_unary_rpc_method_handler(
          servicer.clientStreamHello,
          request_deserializer=Hello__pb2.Person.FromString,
          response_serializer=Hello__pb2.Result.SerializeToString,
      ),
      'biStreamHello': grpc.stream_stream_rpc_method_handler(
          servicer.biStreamHello,
          request_deserializer=Hello__pb2.Person.FromString,
          response_serializer=Hello__pb2.Result.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'com.protobuf.proto.HelloService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
